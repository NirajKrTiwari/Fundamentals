Java HashMap
--------------
HashMap<K, V> is a part of Javaâ€™s collection since Java 1.2. This class is found in java.util package. It provides the basic implementation of the Map interface of Java. 
It stores the data in (Key, Value) pairs, and you can access them by an index of another type (e.g. an Integer). 
One object is used as a key (index) to another object (value). If you try to insert the duplicate key, it will replace the element of the corresponding key.

HashMap is similar to HashTable, but it is unsynchronized. It allows to store the null keys as well, but there should be only one null key object and there can be any number of null values.  
This class makes no guarantees as to the order of the map. To use this class and its methods, you need to import java.util.HashMap package or its superclass.
No Duplicate Key on HashMap.

Points to remember
..................

1.Java HashMap contains values based on the key.
2.Java HashMap contains only unique keys.
3.Java HashMap may have one null key and multiple null values.
4.Java HashMap is non synchronized.
5.Java HashMap maintains no order.
6.The initial default capacity of Java HashMap class is 16 with a load factor of 0.75.

HashMap class declaration:
public class HashMap<K,V> extends AbstractMap<K,V> implements Map<K,V>, Cloneable, Serializable  

HashMap class Parameters:
K: It is the type of keys maintained by this map.
V: It is the type of mapped values.

Example:
import java.util.*;  
public class HashMapExample1{  
 public static void main(String args[]){  
   HashMap<Integer,String> map=new HashMap<Integer,String>();//Creating HashMap    
   map.put(1,"Mango");  //Put elements in Map  
   map.put(2,"Apple");    
   map.put(3,"Banana");   
   map.put(4,"Grapes");   
       
   System.out.println("Iterating Hashmap...");  
   for(Map.Entry m : map.entrySet()){    
    System.out.println(m.getKey()+" "+m.getValue());    
   }  
}  
}  

Output:
Iterating Hashmap...
1 Mango
2 Apple
3 Banana
4 Grapes